version: '3.3'
services:
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USERNAME: "postgres"
      POSTGRES_PASSWORD: "Pa22word"
      POSTGRES_DB:  data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/var/run/docker.sock mongodb/mongodb
      - /var/run/docker.sock:/var/run/docker.sock

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb

  registry:
    container_name: registry
    image: registry:2.8.3
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry/data/files

  registry-ui:
    image: jc21/registry-ui
    ports:
      - "8044:80"
    environment:
        #- REGISTRY_HOST=localhost:5000
        - REGISTRY_HOST=host.docker.internal:5000
        #- REGISTRY_SSL=true
        - REGISTRY_DOMAIN=localhost:5000
        - REGISTRY_STORAGE_DELETE_ENABLED=true
    restart: on-failure

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  flagsmith:
    container_name: flagsmith
    image: flagsmith/flagsmith
    restart: always
    environment:
      # DATABASE_URL: "postgres://postgres:Pa22word@localhost:5432/postgres"
      DJANGO_ALLOWED_HOSTS: '*' # Change this in production
      DJANGO_SECRET_KEY: "secret"
      DATABASE_URL: "postgres://postgres:Pa22word@host.docker.internal:5432/postgres"
      # ALLOW_ADMIN_INITIATION_VIA_CLI: "'true' # Change this in production
      # FLAGSMITH_DOMAIN: "localhost:8000 # Change this in production
      # TODO: it doesn't like when I move the port from 8000
    ports:
      - "8000:8000"
    depends_on:
      - db

  elasticSearch:
    image: elasticsearch:8.12.2
    restart: always
    environment:
      - xpack.security.enabled=true
      - discovery.type=single-node
      - "ELASTIC_PASSWORD=changeme"
    ports:
      - "9200:9200"
      - "9300:9300"

  imdbFileSync:
    build: filesync/
    image: paul/datasync:latest
    depends_on:
      - db
      - mongodb
    volumes:
      - imdb_file_data:/var/lib/imdb/data/files
  mq:
    container_name: rabbitMQ
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitMQ_data:/var/lib/rabbitmq/data

  webService:
    build: webservice/
    image: paul/webservice:latest
    ports:
      - "8090:8090"
    depends_on:
      - db
      - mongodb
      - mq
    environment:
      - PYTHONUNBUFFERED=1
      - "SPRING_PROFILES_ACTIVE=local-docker"
    env_file:
      - config/.dev

  ui:
    hostname: localhost
    build: ui/
    image: paul/ui:latest
    ports:
      - "4200:4200"

  healthchecks:
    image: healthchecks/healthchecks:latest
    container_name: healthchecks
    environment:
      - ALLOWED_HOSTS=localhost,http://192.168.50.56/
      - DB=postgres
      - DB_NAME=/data/hc.sqlite
      - DEBUG=False
      - DEFAULT_FROM_EMAIL=fixme-email-address-here
      - EMAIL_HOST=fixme-smtp-host-here
      - EMAIL_HOST_PASSWORD=fixme-smtp-password-here
      - EMAIL_HOST_USER=fixme-smtp-username-here
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - SECRET_KEY=---
      - SITE_ROOT=http://localhost:8000
    ports:
      - "8002:8000"
    volumes:
      - healthchecks-data:/data
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    ports:
      - "8001:8000"
      - "9000:9000"
    restart: always
    volumes:
      - portainer_data:/var/run/docker.sock portainer/portainer-ce
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres_data:
    external: false
  portainer_data:
    external: false
  rabbitMQ_data:
    external: false
  imdb_file_data:
    external: false
  registry_data:
    external: false
  mongo_data:
    external: false


